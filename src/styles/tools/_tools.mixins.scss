@import '../settings/index';

@mixin var($property, $name) {
  #{$property}: map-get($vars, $name);
  #{$property}: var(--cb-#{$name}, map-get($vars, $name));
}

@mixin font() {
  @include var(font-family, font-family-default);
  @include var(font-size, font-size-md);
  @include var(font-weight, font-weight-default);
}

@mixin gradient($start, $end) {
  background-image: linear-gradient(to right, $start 0%, $end 51%, $start 100%);
}

@mixin transition(
  $properties: (
    all
  ),
  $duration: 0.25s,
  $delay: null,
  $easing: ease-in-out
) {
  $value: null;

  @each $prop in $properties {
    $prop-value: append((), $prop, space);
    $prop-value: append($prop-value, $duration, space);

    @if $delay != null {
      $prop-value: append($prop-value, $delay, space);
    }

    $prop-value: append($prop-value, $easing, space);

    $value: append($value, $prop-value, comma);
  }

  transition: $value;
}

// Mixin to quickly apply accessible hiding to elements.
@mixin hidden($accessible: false) {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
  pointer-events: none;

  @if $accessible != false {
    display: none !important;
    opacity: 0 !important;
  }
}

@mixin interactable($color-name: color-primary) {
  outline: none !important;
  opacity: 1;

  &.is-hovered,
  &:hover {
    opacity: 0.85;
  }

  &.is-focused,
  &:focus {
    outline: 0;
    animation: highlight 1.5s ease-in-out;
    box-shadow: 0 0 0 color($color-name);
    animation: pulse 2s;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 color($color-name);
    }
    70% {
      box-shadow: 0 0 0 10px transparent;
    }
    100% {
      box-shadow: 0 0 0 0 transparent;
    }
  }
}

@mixin disableable() {
  &.is-disabled,
  &:disabled {
    cursor: not-allowed;
    opacity: 0.25;

    user-select: none;
  }
}

@mixin rounded($border-radius: 4px) {
  border-radius: $border-radius;
}

@mixin ellipsize($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hoverable() {
  &:not(.is-disabled):not(:disabled) {
    &:hover {
      @content;
    }
  }
}
